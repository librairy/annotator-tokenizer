<!--
  ~ Copyright (c) 2016. Universidad Politecnica de Madrid
  ~
  ~ @author Badenes Olmedo, Carlos <cbadenes@fi.upm.es>
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>org.librairy</groupId>
    <artifactId>librairy-annotator-tokenizer</artifactId>
    <version>1.8.0</version>
    <packaging>jar</packaging>
    <name>annotator-tokenizer</name>
    <description>retrieve tokens from textual content</description>
    <url>https://github.com/librairy/annotator-tokenizer</url>
    <organization>
        <name>Ontology Engineering Group</name>
        <url>http://www.oeg-upm.net</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <inceptionYear>2016</inceptionYear>
    <scm>
        <url>https://github.com/librairy/annotator-tokenizer</url>
    </scm>
    <developers>
        <developer>
            <id>cbadenes</id>
            <name>Carlos Badenes Olmedo</name>
            <email>cbadenes at fi.upm.es</email>
        </developer>
    </developers>

    <repositories>

        <!-- External Libraries -->
        <repository>
            <id>external-libs</id>
            <url>https://raw.github.com/cbadenes/external-libs/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

        <!-- Test Utils Repository -->
        <repository>
            <id>test-utils</id>
            <url>https://raw.github.com/cbadenes/test-utils/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

        <!-- Librairy Repositories -->
        <repository>
            <id>librairy-boot-repo</id>
            <url>https://raw.github.com/librairy/boot/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

    </repositories>

    <prerequisites>
      <maven>3.0.0</maven>
    </prerequisites>

    <properties>
        <!-- Docker -->
        <docker.image.prefix>librairy</docker.image.prefix>

        <!-- Project Details -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.java.version>1.8</project.java.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>

        <coreNlpExtensions.version>1.0</coreNlpExtensions.version>
        <librairy.boot.version>1.8.0</librairy.boot.version>
        <lucene.version>4.10.4</lucene.version>
        <junit.version>4.12</junit.version>
        <stanford.version>3.5.2</stanford.version><!-- 3.6.0 -->
        <stanford.spanish.version>3.5.2</stanford.spanish.version><!-- 3.6.0 -->
        <stanford.parser.version>1.0</stanford.parser.version>
        <testutils.version>1.0.0</testutils.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
    </parent>

    <dependencyManagement>

        <dependencies>

            <!-- librairy boot dependency -->
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-boot</artifactId>
                <version>${librairy.boot.version}</version>
            </dependency>
            <!-- librairy boot transitive-dependencies -->
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-boot</artifactId>
                <version>${librairy.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Stanford Libraries -->
            <dependency>
                <groupId>edu.stanford.nlp</groupId>
                <artifactId>stanford-corenlp</artifactId>
                <version>${stanford.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.stanford.nlp</groupId>
                <artifactId>stanford-parser</artifactId>
                <version>${stanford.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.stanford.nlp</groupId>
                <artifactId>stanford-corenlp</artifactId>
                <version>${stanford.version}</version>
                <classifier>models</classifier>
            </dependency>
            <dependency>
                <groupId>edu.stanford.nlp</groupId>
                <artifactId>stanford-corenlp</artifactId>
                <version>${stanford.version}</version>
                <classifier>models-spanish</classifier>
            </dependency>
            <dependency>
                <groupId>intoxicant.analytics</groupId>
                <artifactId>coreNlpExtensions</artifactId>
                <version>${coreNlpExtensions.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>${lucene.version}</version>
            </dependency>

            <!-- Unit tests Libraries -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>es.cbadenes.lab</groupId>
                <artifactId>test-utils</artifactId>
                <version>${testutils.version}</version>
            </dependency>

            <!-- Log Libraries -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>

        <!-- Internal Dependencies -->
        <dependency>
            <groupId>org.librairy</groupId>
            <artifactId>librairy-boot</artifactId>
        </dependency>

        <!-- Stanford Libraries -->
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>xalan</groupId>
                    <artifactId>xalan</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-parser</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <classifier>models</classifier>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <classifier>models-spanish</classifier>
        </dependency>
        <dependency>
            <groupId>intoxicant.analytics</groupId>
            <artifactId>coreNlpExtensions</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>

        <!-- Unit tests Libraries -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>es.cbadenes.lab</groupId>
            <artifactId>test-utils</artifactId>
        </dependency>

        <!-- Log Libraries -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>annotator-tokenizer</finalName>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                    <compilerVersion>${project.java.version}</compilerVersion>
                </configuration>
            </plugin>

            <!-- Maven Test Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.12</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <includes>
                        <include>**/*.class</include>
                    </includes>
                    <excludedGroups>es.cbadenes.lab.test.IntegrationTest</excludedGroups>
                </configuration>
            </plugin>

            <!-- Spring-Boot Unique Jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Docker Plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version>
                <configuration>
                    <imageName>librairy/${project.name}</imageName>
                    <serverId>dockerhub</serverId>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <forceTags>true</forceTags>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
